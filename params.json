{"name":"Svg.draw.js","tagline":"An extension of svn.js which allows to draw elements with mouse","body":"svg.draw.js\r\n===========\r\n\r\nAn extension of svn.js which allows to draw elements with mouse\r\n\r\n# Usage\r\n\r\nAs default the drawing starts with a click on the svg-Element\r\n\r\n\r\n    var draw = SVG('drawing');\r\n    draw.rect().draw();\r\n\r\n\r\nYou can use your own mouse-events. Just pass the event-Object to the draw-Function\r\n\r\n\r\n    var draw = SVG('drawing');\r\n    var rect = draw.rect();\r\n\r\n    draw.on('mousedown', function(event){\r\n        rect.draw(event);\r\n    });\r\n    draw.on('mouseup', function(event){\r\n        rect.draw(event);\r\n    });\r\n\r\n\r\n# Events\r\n\r\nThere are 4 events to which you can bind functions\r\n\r\n- drawstart\r\n- drawstop\r\n- drawudpdate\r\n- drawpoint\r\n\r\nDrawpoint is triggered on shapes like polygons and polylines.\r\n\r\nEach event-object holds the relative position to the parent-Object of the Shape (which is mostly the SVG-doc itself) as Array\r\n\r\nBinding a function to the Event is easy\r\n\r\n    var draw = SVG('drawing');\r\n    draw.rect().draw();\r\n    rect.on('drawstart', function(event){\r\n        console.log(e.detail); // Prints the position [x,y] where drawing started\r\n    });\r\n\r\n\r\n# Options\r\n\r\nThere are a few options available you can use. Each option is mostly only for special shapes\r\n\r\n- keyDone: For Polygon and Polyline. Finishs the shape (default = `13` = Enter)\r\n- keyCancel: Removes the Shape (default = `27` = escape)\r\n- useRadius: Draws a circle with using the mouseposition as radius not the x and y position itself\r\n- snapToGrid: Snaps the shape to a virtual grid while drawing (default `1`)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}